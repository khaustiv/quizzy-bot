# Generated by Django 5.0 on 2023-12-18 10:30

import bot.models
import dashboard.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=256, verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subcategory', models.CharField(max_length=256, verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Подкатегория',
                'verbose_name_plural': 'Подкатегории',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.PositiveBigIntegerField(primary_key=True, serialize=False, verbose_name='Telegram ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('username', models.CharField(blank=True, max_length=32, null=True, verbose_name='Username')),
                ('first_name', models.CharField(max_length=256, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='Фамилия')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Права администратора')),
                ('is_blocked_bot', models.BooleanField(default=False, verbose_name='Бот заблокирован')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', dashboard.fields.MEditorField(verbose_name='Вопрос')),
                ('question_type', models.CharField(choices=[('select_one', 'Выбор ответа'), ('short_reply', 'Краткий ответ')], max_length=64, verbose_name='Тип вопроса')),
                ('correct_answer', models.CharField(max_length=1024, verbose_name='Правильный ответ')),
                ('choice_1', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Неправильный ответ 1')),
                ('choice_2', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Неправильный ответ 2')),
                ('choice_3', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Неправильный ответ 3')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bot.category', verbose_name='Категория')),
                ('subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bot.subcategory', verbose_name='Подкатегория')),
            ],
            options={
                'verbose_name': 'Задание',
                'verbose_name_plural': 'Задания',
            },
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(verbose_name='Правильный ответ')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.assignment', verbose_name='Задание')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Результат',
                'verbose_name_plural': 'Результаты',
            },
        ),
    ]
